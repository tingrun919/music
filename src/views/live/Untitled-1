
	
	var conn = new WebIM.connection({
	    isMultiLoginSessions: WebIM.config.isMultiLoginSessions,
	    https: typeof WebIM.config.https === 'boolean' ? WebIM.config.https : location.protocol === 'https:',
	    url: WebIM.config.xmppURL,
	    heartBeatWait: WebIM.config.heartBeatWait,
	    autoReconnectNumMax: WebIM.config.autoReconnectNumMax,
	    autoReconnectInterval: WebIM.config.autoReconnectInterval,
	    apiUrl: WebIM.config.apiURL,
	    isAutoLogin: true
	});
	//获取用户名 账号
	var roomid1=sessionStorage.getItem("roomid");
	var user=sessionStorage.getItem("aPhone");
	var pwd=sessionStorage.getItem("aImtoken");
	var options = { 
	  apiUrl: WebIM.config.apiURL,
	  user: user,
	  pwd: pwd,
	  appKey: WebIM.config.appkey
	};
	conn.open(options);
		conn.listen({
	    onOpened: function ( message ) {
	    	console.log(message)//连接成功回调
			joinRoom();
	        // 如果isAutoLogin设置为false，那么必须手动设置上线，否则无法收消息
	        // 手动上线指的是调用conn.setPresence(); 如果conn初始化时已将isAutoLogin设置为true
	        // 则无需调用conn.setPresence();             
	    }, 
	    onPresence: function ( message ) {
	     	console.log(message);
    		handlePresence(message);
  		},
	    onClosed: function ( message ) {
	    	
	    },         //连接关闭回调
	    onTextMessage: function ( message ) {
	    	var data = message.data;
	    	console.log(message);
	    	var time1 = getNowFormatDate();
			var name1 = sessionStorage.getItem("aNickname");
	    	if(name1 !=message.ext.name){
	    		$("#wrapper36665677643777").append('<div class="webim-msg-container rel" id="sendMsg"><div class="rel left"><div class="webim-avatar-icon left small"><img class="w100" src="images/default.png"></div><p class="left"><span>'+message.ext.name+'</span><span> </span><span>'+time1+'</span></p><div class="clearfix"><div class="webim-msg-value"><pre data-reactid=".3.2.1.1">'+message.data+'</pre></div><div class="webim-msg-error hide"><span class="webim-file-icon font smaller red" title="">k</span></div></div></div></div>')
        		var scrollHeight = $("#wrapper36665677643777")[0].scrollHeight;
		    	var clientHeight = $("#wrapper36665677643777")[0].clientHeight;
		    	console.log(clientHeight,scrollHeight);
		    	if(scrollHeight > clientHeight){
		        	$("#wrapper36665677643777").animate({
		            	scrollTop:scrollHeight-100
		        	},1000)
		    	}
	    	}
        	
	    },    //收到文本消息
	    onEmojiMessage: function ( message ) {},   //收到表情消息
	    onPictureMessage: function ( message ) {}, //收到图片消息
	    onCmdMessage: function ( message ) {},     //收到命令消息
	    onAudioMessage: function ( message ) {},   //收到音频消息
	    onLocationMessage: function ( message ) {},//收到位置消息
	    onFileMessage: function ( message ) {},    //收到文件消息
	    onVideoMessage: function (message) {
	        var node = document.getElementById('privateVideo');
	        var option = {
	            url: message.url,
	            headers: {
	              'Accept': 'audio/mp4'
	            },
	            onFileDownloadComplete: function (response) {
	                var objectURL = WebIM.utils.parseDownloadResponse.call(conn, response);
	                node.src = objectURL;
	            },
	            onFileDownloadError: function () {
	                console.log('File down load error.')
	            }
	        };
	        WebIM.utils.download.call(conn, option);
	    },   //收到视频消息
	    onPresence: function ( message ) {},       //处理“广播”或“发布-订阅”消息，如联系人订阅请求、处理群组、聊天室被踢解散等消息
	    onRoster: function ( message ) {},         //处理好友申请
	    onInviteMessage: function ( message ) {},  //处理群组邀请
	    onOnline: function () {},                  //本机网络连接成功
	    onOffline: function () {},                 //本机网络掉线
	    onError: function ( message ) {},          //失败回调
	    onBlacklistUpdate: function (list) {       //黑名单变动
	        // 查询黑名单，将好友拉黑，将好友从黑名单移除都会回调这个函数，list则是黑名单现有的所有好友信息
	        console.log(list);
	    },
	    onReceivedMessage: function(message){
	    	console.log("收到消息送达服务器回执"+message)
	    },    //收到消息送达服务器回执
	    onDeliveredMessage: function(message){
	    	console.log("收到消息送达客户端回执"+message)
	    },   //收到消息送达客户端回执
	    onReadMessage: function(message){},        //收到消息已读回执
	    onCreateGroup: function(message){},        //创建群组成功回执（需调用createGroupNew）
	    onMutedMessage: function(message){}        //如果用户在A群组被禁言，在A群发消息会走这个回调并且消息不会传递给群其它成员
	});
	var joinRoom = function () {
   			// 加入聊天室
   		var roomid1=sessionStorage.getItem("roomid");
   		console.log(roomid1);
		conn.joinChatRoom({
			roomId:roomid1,  // 聊天室id
		});
	};
	var quitRoom = function () {
    	// 退出聊天室
	    conn.quitChatRoom({
	        roomId:roomid1,  // 聊天室id
	    });
	}
	var handlePresence = function ( e ) {
//	  	e.type === 'joinChatRoomSuccess' //加入成功
		if(e.type === 'joinChatRoomSuccess'){
			console.log("加入聊天室成功")
		}else if(e.type === 'deleteGroupChat'){
			console.log("聊天室被删除");
		}else if(e.type === 'joinChatRoomFailed'){
			console.log("加入聊天室失败")
		}
//	    e.type === 'deleteGroupChat' //聊天室被删除
//	    e.type === 'joinChatRoomFailed' //加入失败
	};
		function getNowFormatDate() {
			    var date = new Date();
			    var seperator1 = "-";
			    var seperator2 = ":";
			    var month = date.getMonth() + 1;
			    var strDate = date.getDate();
			    if (month >= 1 && month <= 9) {
			        month = "0" + month;
			    }
			    if (strDate >= 0 && strDate <= 9) {
			        strDate = "0" + strDate;
			    }
			    var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate
			            + " " + date.getHours() + seperator2 + date.getMinutes()
			            + seperator2 + date.getSeconds();
			    return currentdate;
			}
			var time = getNowFormatDate();
		var sendRoomText = function (msgContent,roomid,name,img) {
			console.log(msgContent);
		    var id = conn.getUniqueId();         // 生成本地消息id
		    var msg = new WebIM.message('txt', id); // 创建文本消息
		    var option = {
		        msg: msgContent,          // 消息内容
		        to:roomid,               // 接收消息对象(聊天室id)
		        roomType: true,
		        chatType: 'chatRoom',
		        ext :{'name':name,'icon':img},    //用户自扩展的消息内容（群聊用法相同）
		        success: function () {
		            console.log('send room text success');
		            $("#wrapper36665677643777").append('<div class="webim-msg-container rel" id="sendMsg"><div class="rel right" ><div class="webim-avatar-icon right small"><img class="w100" src="images/default.png"></div><p class="right"><span>'+name+'</span><span></span><span>'+time+'</span></p><div class="clearfix"><div class="webim-msg-delivered hide"></div><div class="webim-msg-value"><pre>'+msgContent+'</pre></div><div class="webim-msg-error hide"><span class="webim-file-icon font smaller red">k</span></div></div></div></div>')
		            console.log( $("#wrapper36665677643777"))
		            var scrollHeight = $("#wrapper36665677643777")[0].scrollHeight;
		            var clientHeight = $("#wrapper36665677643777")[0].clientHeight;
		            console.log(clientHeight,scrollHeight);
		            if(scrollHeight > clientHeight){
		            	$("#wrapper36665677643777").animate({
		            		scrollTop:scrollHeight-100
		            	},1000)
		            }
		        },
		        fail: function () {
		            console.log('failed');
		        }
		    };
		    msg.set(option);
		    msg.setGroup('groupchat');
		    conn.send(msg.body);
		};
	$(document).keyup(function(event){
	  	if(event.keyCode ==13){
	    	var msgContent1=$("#textarea")[0].value;
			console.log(roomid1);
			//获取用户昵称
			var name1 = sessionStorage.getItem("aNickname");
			//获取用户头像	
			var img1=sessionStorage.getItem("aPortrait");
			sendRoomText(msgContent1,roomid1,name1,img1);
			$("#textarea")[0].value="";
	  	}
	})
	$("#send").click(function(){
		//获取文本消息内容
	var msgContent1=$("#textarea")[0].value;
	
	console.log(roomid1);
	//获取用户昵称
	var name1 = sessionStorage.getItem("aNickname");
	//获取用户头像	
	var img1=sessionStorage.getItem("aPortrait");
	sendRoomText(msgContent1,roomid1,name1,img1);
	$("#textarea")[0].value="";
		
	})
	 window.onbeforeunload=function(){
	 	alert("关闭窗口");
	 	quitRoom();
	 }
